name: Trigger staging for version change

on:
  push:
    branches: [ main ]
  pull_request_target:
    types: [opened, synchronize, reopened, edited, ready_for_review, labeled]

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Current Update
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}

      - name: Get Chart Version from Chart.yaml
        id: pr-chart-yaml-data
        uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: 'charts/device-registry/Chart.yaml'          # File to read from
          key-path: '["version"]' # Access the runs key then the using key and retuns the value.

      - name: Get Values Tag from values.yaml
        id: pr-values-yaml-data
        uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: 'charts/device-registry/values.yaml'          # File to read from
          key-path: '["deviceTag"]' # Access the runs key then the using key and retuns the value.

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          repository: openshift-app-service-poc/helm-station-config
          path: "config-chart"

      - name: Get metadata from chart config yaml
        id: config-chart-yaml-data
        uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: 'config-chart/chart/device-registry/Chart.yaml'          # File to read from
          key-path: '["version"]' # Access the runs key then the using key and returns the value.

      - name: Get metadata from chart config yaml
        id: config-values-yaml-data
        uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: 'config-chart/chart/device-registry/values-test.yaml'          # File to read from
          key-path: '["deviceTag"]' # Access the runs key then the using key and retuns the value.

      # - name: Write metadata to a json file
      #   if: ${{ steps.check_files.outputs.updated_file != 'none' }}
      #   env:
      #     METADATA: ${{ steps.template-yaml-data.outputs.data }}
      #   run: |
      #     echo metadata: $METADATA
      #     echo $METADATA | sed 's:app.kubernetes.io/::g'
      #     echo $METADATA | sed 's:app.kubernetes.io/::g' > temp.json

      # - name: get config version from metadata
      #   id: config-version
      #   uses: notiz-dev/github-action-json-property@release
      #   with:
      #       path: 'temp.json'
      #       prop_path: 'labels.version'

      - if:  ${{ steps.config-chart-yaml-data.outputs.data != steps.pr-chart-yaml-data.outputs.data ||  steps.config-values-yaml-data.outputs.data != steps.pr-values-yaml-data.outputs.data}}
        run: |
          echo "we have some work to do version was ${{steps.config-chart-yaml-data.outputs.data}} and now ${{steps.pr-chart-yaml-data.outputs.data}}"
          echo "we have some work to do device tag  was ${{steps.config-values-yaml-data.outputs.data}} and now ${{steps.pr-values-yaml-data.outputs.data}}"


      # - name: Update config file to trigger pipeline
      #   id: update_file
      #   if:  ${{ steps.config-chart-yaml-data.outputs.data != steps.pr-chart-yaml-data.outputs.data ||  steps.config-values-yaml-data.outputs.data != steps.pr-values-yaml-data.outputs.data}}
      #   run: |
      #     to_replace=""
      #     while read -r line;
      #     do
      #       echo "check $line"
      #       if [[ "$line" == "version"* ]]; then
      #           to_replace=$line
      #           echo "to_replace: $to_replace"
      #           break
      #       fi
      #     done < 'config-chart/chart/device-registry/'

      #     if [ "$to_replace" != "" ]; then
      #         replace_with="app.kubernetes.io/version: "${{ steps.chart-yaml-data.outputs.data }}
      #         echo "replace_with: $replace_with"
      #         sed -i "s|$to_replace|$replace_with|" config-chart/chart/device-registry/
      #     fi

      - name: Update version
        if:  ${{ steps.config-chart-yaml-data.outputs.data != steps.pr-chart-yaml-data.outputs.data}}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'config-chart/chart/device-registry/Chart.yaml'
          propertyPath: 'version'
          value: ${{ steps.pr-chart-yaml-data.outputs.data }}
          commitChange: false
          updateFile: true

      - name: Update device tag
        if:  ${{ steps.config-values-yaml-data.outputs.data != steps.pr-values-yaml-data.outputs.data}}
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'config-chart/chart/device-registry/values-test.yaml'
          propertyPath: 'deviceTag'
          value: ${{ steps.pr-values-yaml-data.outputs.data }}
          commitChange: false
          updateFile: true

      - name: Pushes version
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
            API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'config-chart/chart/device-registry/Chart.yaml'
          destination_repo: 'openshift-app-service-poc/helm-station-config'
          destination_folder: 'chart/device-registry'
          user_email: 'mmulholl@redhat.com'
          user_name: 'mmulholla'
          commit_message: 'Update config chart version for Argo CD pipeline testing'

      - name: Pushes device tag
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
            API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'config-chart/chart/device-registry/values-test.yaml'
          destination_repo: 'openshift-app-service-poc/helm-station-config'
          destination_folder: 'chart/device-registry'
          user_email: 'kmamgain@redhat.com'
          user_name: 'kmamgain'
          commit_message: 'Update config chart values device tag for Argo CD pipeline testing'
